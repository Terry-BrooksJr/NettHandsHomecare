# Generated by Django 4.2.2 on 2023-07-07 13:12
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import localflavor.us.models
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="last login",
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists.",
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator(),
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        verbose_name="first name",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        verbose_name="last name",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        verbose_name="email address",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        verbose_name="date joined",
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("M", "Male"),
                            ("F", "Female"),
                            ("X", "Non-Gendered"),
                            ("B", "Binary"),
                        ],
                        default="X",
                        max_length=255,
                    ),
                ),
                (
                    "social_security",
                    localflavor.us.models.USSocialSecurityNumberField(
                        max_length=11,
                        null=True,
                        unique=True,
                    ),
                ),
                ("middle_name", models.CharField(default="", max_length=255)),
                (
                    "street_address",
                    models.CharField(default="", max_length=255, null=True),
                ),
                (
                    "marital_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Married"),
                            ("D", "Divorced"),
                            ("S", "Separated"),
                            ("W", "Widowed"),
                            ("NM", "Never Married"),
                        ],
                        default="NM",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "emergency_contact_first_name",
                    models.CharField(default="", max_length=255, null=True),
                ),
                (
                    "emergency_contact_last_name",
                    models.CharField(default="", max_length=255, null=True),
                ),
                (
                    "emergency_contact_relationship",
                    models.CharField(default="", max_length=255, null=True),
                ),
                (
                    "emergency_contact_phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        default="+15555555555",
                        max_length=128,
                        region=None,
                    ),
                ),
                ("city", models.CharField(default="", max_length=255, null=True)),
                (
                    "department",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PC", "Patient Care"),
                            ("A", "Administration"),
                            ("B", "Billing"),
                            ("O", "Other"),
                        ],
                        default="PC",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        max_length=128,
                        null=True,
                        region=None,
                    ),
                ),
                ("state", localflavor.us.models.USStateField(max_length=2, null=True)),
                (
                    "zipcode",
                    localflavor.us.models.USZipCodeField(max_length=10, null=True),
                ),
                (
                    "pre_service_completion_date",
                    models.DateField(blank=True, null=True),
                ),
                ("job_title", models.CharField(blank=True, max_length=255, null=True)),
                ("hire_date", models.DateField(null=True)),
                ("in_compliance", models.BooleanField(default=False, null=True)),
                ("onboarded", models.DateField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Assessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("attempt_date", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
